name: Actions

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest

    outputs:
      changed_dirs: ${{ steps.detect.outputs.changed_dirs }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect Changed Directories
        id: detect
        run: |
          echo "Detectando serviços alterados..."
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            echo "Apenas um commit encontrado. Listando todos os arquivos..."
            CHANGED_DIRS=$(git ls-files | cut -d'/' -f1 | sort | uniq)
          else
            echo "Comparando últimas revisões..."
            CHANGED_DIRS=$(git diff --name-only HEAD~1 HEAD | cut -d'/' -f1 | sort | uniq)
          fi
          echo "Diretórios alterados: $CHANGED_DIRS"
          CHANGED_DIRS_CONCAT=$(echo "$CHANGED_DIRS" | paste -sd "," -)
          echo "Diretórios alterados (CSV): $CHANGED_DIRS_CONCAT"
          echo "changed_dirs=$CHANGED_DIRS_CONCAT" >> $GITHUB_OUTPUT

  compile-consulta:
    name: Compile Consulta
    runs-on: ubuntu-latest
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed_dirs, 'consulta')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile
        run: |
          cd ./consulta
          mvn clean package -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: consulta-jar-file
          path: ./consulta/target/*.jar

  compile-saque:
    name: Compile Saque
    runs-on: ubuntu-latest
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed_dirs, 'saque')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile
        run: |
          cd ./saque
          mvn clean package -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: saque-jar-file
          path: ./saque/target/*.jar

  compile-gateway:
    name: Compile Gateway
    runs-on: ubuntu-latest
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed_dirs, 'gateway')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile
        run: |
          cd ./gateway
          mvn clean package -DskipTests

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gateway-jar-file
          path: ./gateway/target/*.jar

  build-and-push-consulta:
    name: Build and Push Consulta
    runs-on: ubuntu-latest
    needs: compile-consulta

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: consulta-jar-file
          path: ./consulta/target

      - name: Set VERSION
        id: version
        run: |
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')"
          echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')" >> $GITHUB_ENV
          echo ${{ env.VERSION }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./consulta
          push: true
          file: ./consulta/Dockerfile
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/sistema-microsservicos-financeiro-demo:consulta-${{ env.VERSION }}

  build-and-push-saque:
    name: Build and Push Saque
    runs-on: ubuntu-latest
    needs: compile-saque

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: saque-jar-file
          path: ./saque/target

      - name: Set VERSION
        id: version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./saque
          push: true
          file: ./saque/Dockerfile
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/sistema-microsservicos-financeiro-demo:saque-${{ env.VERSION }}

  build-and-push-gateway:
    name: Build and Push Gateway
    runs-on: ubuntu-latest
    needs: compile-gateway

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: gateway-jar-file
          path: ./gateway/target

      - name: Set VERSION
        id: version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//')" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./gateway
          push: true
          file: ./gateway/Dockerfile
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/sistema-microsservicos-financeiro-demo:gateway-${{ env.VERSION }}

  build-and-push-redis:
    name: Build and Push Redis
    runs-on: ubuntu-latest
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed_dirs, 'redis')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set VERSION
        id: version
        run: echo "VERSION=$(cat version)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./redis
          push: true
          file: ./redis/Dockerfile
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/sistema-microsservicos-financeiro-demo:redis-${{ env.VERSION }}

  build-and-push-rabbitmq:
    name: Build and Push RabbitMQ
    runs-on: ubuntu-latest
    needs: detect-changes
    if: contains(needs.detect-changes.outputs.changed_dirs, 'rabbitmq')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set VERSION
        id: version
        run: echo "VERSION=$(cat version)" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./rabbitmq
          push: true
          file: ./rabbitmq/Dockerfile
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/sistema-microsservicos-financeiro-demo:rabbitmq-${{ env.VERSION }}

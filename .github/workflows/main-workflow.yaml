name: Actions

on:
  push:
    branches:
      - main

jobs:
  detect-changes:
    name: Detect Changes
    runs-on: ubuntu-latest

    outputs:
      changed_dirs: ${{ steps.detect.outputs.changed_dirs }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect Changed Directories
        id: detect
        run: |
          echo "üîç Detectando servi√ßos alterados..."
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            echo "‚ö†Ô∏è Apenas um commit encontrado. Listando todos os arquivos..."
            CHANGED_DIRS=$(git ls-files | cut -d'/' -f1 | sort | uniq)
          else
            echo "üîç M√∫ltiplos commits encontrados. Comparando √∫ltimas revis√µes..."
            CHANGED_DIRS=$(git diff --name-only HEAD~1 HEAD | cut -d'/' -f1 | sort | uniq)
          fi
          echo "Diret√≥rios alterados: $CHANGED_DIRS"
          echo "::set-output name=changed_dirs::$CHANGED_DIRS"

  compile:
    name: Compile Projects
    runs-on: ubuntu-latest
    needs: detect-changes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Compile Spring Boot Projects
        if: contains(needs.detect-changes.outputs.changed_dirs, 'consulta')
        run: |
          echo "üî® Compilando consulta"
          cd ./consulta
          mvn clean package -DskipTests

      - name: Compile Spring Boot Projects
        if: contains(needs.detect-changes.outputs.changed_dirs, 'saque')
        run: |
          echo "üî® Compilando saque"
          cd ./saque
          mvn clean package -DskipTests

      - name: Compile Spring Boot Projects
        if: contains(needs.detect-changes.outputs.changed_dirs, 'gateway')
        run: |
          echo "üî® Compilando gateway"
          cd ./gateway
          mvn clean package -DskipTests

  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: compile

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push - Consulta
        if: contains(needs.detect-changes.outputs.changed_dirs, 'consulta')
        run: |
          cd ./consulta
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/consulta:$VERSION .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/consulta:$VERSION

      - name: Build and Push - Saque
        if: contains(needs.detect-changes.outputs.changed_dirs, 'saque')
        run: |
          cd ./saque
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/saque:$VERSION .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/saque:$VERSION

      - name: Build and Push - Gateway
        if: contains(needs.detect-changes.outputs.changed_dirs, 'gateway')
        run: |
          cd ./gateway
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:$VERSION .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gateway:$VERSION

      - name: Build and Push - Redis
        if: contains(needs.detect-changes.outputs.changed_dirs, 'redis')
        run: |
          cd ./redis
          VERSION=$(cat version || echo "latest")
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/redis:$VERSION .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/redis:$VERSION

      - name: Build and Push - RabbitMQ
        if: contains(needs.detect-changes.outputs.changed_dirs, 'rabbitmq')
        run: |
          cd ./rabbitmq
          VERSION=$(cat version || echo "latest")
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/rabbitmq:$VERSION .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/rabbitmq:$VERSION
